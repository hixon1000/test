local dfpwm = require("cc.audio.dfpwm")
local function play_sound(file_path)
    local speaker = peripheral.find("speaker")

    local decoder = dfpwm.make_decoder()
    for chunk in io.lines(file_path, 16 * 1024) do
        local buffer = decoder(chunk)
        while not speaker.playAudio(buffer) do
            os.pullEvent("speaker_audio_empty")
        end
    end
end
print("Playing disk 1")
play_sound("/disk/chunk_aa")
print("Playing disk 2")
play_sound("/disk2/chunk_ab")
print("Playing disk 3")
play_sound("/disk3/chunk_ac")
print("Playing disk 4")
play_sound("/disk4/chunk_ad")
print("Playing disk 5")
play_sound("/disk5/chunk_ae")
print("Playing disk 6")
play_sound("/disk6/chunk_af")
print("Playing disk 7")
play_sound("/disk7/chunk_ag")
print("Playing disk 8")
play_sound("/disk8/chunk_ah")
print("Playing disk 9")
play_sound("/disk9/chunk_ai")
print("Playing disk 10")
play_sound("/disk10/chunk_aj")
print("Playing disk 11")
play_sound("/disk11/chunk_ak")
print("Playing disk 12")
play_sound("/disk12/chunk_al")
print("Playing disk 13")
play_sound("/disk13/chunk_am")
print("Playing disk 14")
play_sound("/disk14/chunk_an")
print("Playing disk 15")
play_sound("/disk15/chunk_ao")
print("Playing disk 16")
play_sound("/disk16/chunk_ap")
print("Playing disk 17")
play_sound("/disk17/chunk_aq")


